/**
 * loop
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Loop);
  }
}(this, function(expect, Loop) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Loop.UserApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserApi', function() {
    describe('userChangePassword', function() {
      it('should call userChangePassword successfully', function(done) {
        //uncomment below and update the code to test userChangePassword
        //instance.userChangePassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userConfirm', function() {
      it('should call userConfirm successfully', function(done) {
        //uncomment below and update the code to test userConfirm
        //instance.userConfirm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCount', function() {
      it('should call userCount successfully', function(done) {
        //uncomment below and update the code to test userCount
        //instance.userCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCreate', function() {
      it('should call userCreate successfully', function(done) {
        //uncomment below and update the code to test userCreate
        //instance.userCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCreateChangeStreamGetUsersChangeStream', function() {
      it('should call userCreateChangeStreamGetUsersChangeStream successfully', function(done) {
        //uncomment below and update the code to test userCreateChangeStreamGetUsersChangeStream
        //instance.userCreateChangeStreamGetUsersChangeStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCreateChangeStreamPostUsersChangeStream', function() {
      it('should call userCreateChangeStreamPostUsersChangeStream successfully', function(done) {
        //uncomment below and update the code to test userCreateChangeStreamPostUsersChangeStream
        //instance.userCreateChangeStreamPostUsersChangeStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userDeleteById', function() {
      it('should call userDeleteById successfully', function(done) {
        //uncomment below and update the code to test userDeleteById
        //instance.userDeleteById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userExistsGetUsersidExists', function() {
      it('should call userExistsGetUsersidExists successfully', function(done) {
        //uncomment below and update the code to test userExistsGetUsersidExists
        //instance.userExistsGetUsersidExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userExistsHeadUsersid', function() {
      it('should call userExistsHeadUsersid successfully', function(done) {
        //uncomment below and update the code to test userExistsHeadUsersid
        //instance.userExistsHeadUsersid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userFind', function() {
      it('should call userFind successfully', function(done) {
        //uncomment below and update the code to test userFind
        //instance.userFind(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userFindById', function() {
      it('should call userFindById successfully', function(done) {
        //uncomment below and update the code to test userFindById
        //instance.userFindById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userFindOne', function() {
      it('should call userFindOne successfully', function(done) {
        //uncomment below and update the code to test userFindOne
        //instance.userFindOne(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userLogin', function() {
      it('should call userLogin successfully', function(done) {
        //uncomment below and update the code to test userLogin
        //instance.userLogin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userLogout', function() {
      it('should call userLogout successfully', function(done) {
        //uncomment below and update the code to test userLogout
        //instance.userLogout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPatchOrCreate', function() {
      it('should call userPatchOrCreate successfully', function(done) {
        //uncomment below and update the code to test userPatchOrCreate
        //instance.userPatchOrCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPrototypeCountAccessTokens', function() {
      it('should call userPrototypeCountAccessTokens successfully', function(done) {
        //uncomment below and update the code to test userPrototypeCountAccessTokens
        //instance.userPrototypeCountAccessTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPrototypeCreateAccessTokens', function() {
      it('should call userPrototypeCreateAccessTokens successfully', function(done) {
        //uncomment below and update the code to test userPrototypeCreateAccessTokens
        //instance.userPrototypeCreateAccessTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPrototypeDeleteAccessTokens', function() {
      it('should call userPrototypeDeleteAccessTokens successfully', function(done) {
        //uncomment below and update the code to test userPrototypeDeleteAccessTokens
        //instance.userPrototypeDeleteAccessTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPrototypeDestroyByIdAccessTokens', function() {
      it('should call userPrototypeDestroyByIdAccessTokens successfully', function(done) {
        //uncomment below and update the code to test userPrototypeDestroyByIdAccessTokens
        //instance.userPrototypeDestroyByIdAccessTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPrototypeFindByIdAccessTokens', function() {
      it('should call userPrototypeFindByIdAccessTokens successfully', function(done) {
        //uncomment below and update the code to test userPrototypeFindByIdAccessTokens
        //instance.userPrototypeFindByIdAccessTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPrototypeGetAccessTokens', function() {
      it('should call userPrototypeGetAccessTokens successfully', function(done) {
        //uncomment below and update the code to test userPrototypeGetAccessTokens
        //instance.userPrototypeGetAccessTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPrototypePatchAttributes', function() {
      it('should call userPrototypePatchAttributes successfully', function(done) {
        //uncomment below and update the code to test userPrototypePatchAttributes
        //instance.userPrototypePatchAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPrototypeUpdateByIdAccessTokens', function() {
      it('should call userPrototypeUpdateByIdAccessTokens successfully', function(done) {
        //uncomment below and update the code to test userPrototypeUpdateByIdAccessTokens
        //instance.userPrototypeUpdateByIdAccessTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userPrototypeVerify', function() {
      it('should call userPrototypeVerify successfully', function(done) {
        //uncomment below and update the code to test userPrototypeVerify
        //instance.userPrototypeVerify(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userReplaceByIdPostUsersidReplace', function() {
      it('should call userReplaceByIdPostUsersidReplace successfully', function(done) {
        //uncomment below and update the code to test userReplaceByIdPostUsersidReplace
        //instance.userReplaceByIdPostUsersidReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userReplaceByIdPutUsersid', function() {
      it('should call userReplaceByIdPutUsersid successfully', function(done) {
        //uncomment below and update the code to test userReplaceByIdPutUsersid
        //instance.userReplaceByIdPutUsersid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userReplaceOrCreatePostUsersReplaceOrCreate', function() {
      it('should call userReplaceOrCreatePostUsersReplaceOrCreate successfully', function(done) {
        //uncomment below and update the code to test userReplaceOrCreatePostUsersReplaceOrCreate
        //instance.userReplaceOrCreatePostUsersReplaceOrCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userReplaceOrCreatePutUsers', function() {
      it('should call userReplaceOrCreatePutUsers successfully', function(done) {
        //uncomment below and update the code to test userReplaceOrCreatePutUsers
        //instance.userReplaceOrCreatePutUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userResetPassword', function() {
      it('should call userResetPassword successfully', function(done) {
        //uncomment below and update the code to test userResetPassword
        //instance.userResetPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userSetPassword', function() {
      it('should call userSetPassword successfully', function(done) {
        //uncomment below and update the code to test userSetPassword
        //instance.userSetPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userUpdateAll', function() {
      it('should call userUpdateAll successfully', function(done) {
        //uncomment below and update the code to test userUpdateAll
        //instance.userUpdateAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userUpsertWithWhere', function() {
      it('should call userUpsertWithWhere successfully', function(done) {
        //uncomment below and update the code to test userUpsertWithWhere
        //instance.userUpsertWithWhere(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
